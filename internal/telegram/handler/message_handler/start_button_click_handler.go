package message_handler

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

const (
	greetingBotMessage = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, *%s %s*!\n\n–≠—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç - *Yulia-lingo*.\n\n" +
		"–ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å *—Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞*.\n\n" +
		"*–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω:*\n- –°–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤."
)

func HandleStartButtonClick(bot *tgbotapi.BotAPI, botUpdate tgbotapi.Update, chatID int64) error {
	{
		userFirstName := botUpdate.Message.From.FirstName
		userLastName := botUpdate.Message.From.LastName
		greetingMessage := fmt.Sprintf(greetingBotMessage, userFirstName, userLastName)
		messageToUser := tgbotapi.NewMessage(chatID, greetingMessage)
		messageToUser.ParseMode = "Markdown"
		messageToUser.ReplyMarkup = tgbotapi.NewReplyKeyboard(
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üî∫ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥–ª–∞–≥–æ–ª—ã")),
		)
		_, errorMessage := bot.Send(&messageToUser)
		if errorMessage != nil {
			return fmt.Errorf("failed to send the greeting message to a user: %v", errorMessage)
		}
	}
	return nil
}
